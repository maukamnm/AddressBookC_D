package munoz.com;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class AddBook {
	ArrayList <Address> adds = new ArrayList<>();
	Scanner sc = new Scanner(System.in);
	int ID = 0;
	public void start() {
		boolean again = true;
		do {
			System.out.println("Select an item from the menu");
			System.out.println("1: Create Address\n2: List Addresses\n3: Update Address\n4: "
					+ "Delete Address\n5: Search for Address\n6: Sort Addresses\n" + "0: Exit");
			int menu = sc.nextInt();

			switch (menu) {
			case 1:
				create();
				break;
			case 2:
				read();
				break;
			case 3:
				update();
				break;
			case 4:
				delete();
				break;
			case 5:
				search();
				break;
			case 6:
				sort();
				break;
			case 0:
				again = false;
				System.exit(0);
			}
		} while (again = true);
	}

	public void create() {
		String lname;
		String street;
		String city;
		String state;
		int zip;
		ID = ID+1;
		System.out.println("Enter Last Name: ");
		lname = sc.next();
		System.out.println("Enter Street Address: ");
		street = sc.next();
		System.out.println("Enter City: ");
		city = sc.next();
		System.out.println("Enter State: ");
		state = sc.next();
		System.out.println("Enter Zipcode: ");
		zip = sc.nextInt();
		adds.add(new Address(ID, lname, street, city, state, zip));
	}

	public void read() {
		for (int i=0; i<adds.size(); i++) {
			System.out.println(adds.get(i));
		}
	}

	public void update() {
		read();
		System.out.println("Which would you like to edit?");
		int update = sc.nextInt()-1;
		if(adds.get(update) != null) {
			String lname;
			String street;
			String city;
			String state;
			int zip;

			System.out.println("Enter Last Name: ");
			lname = sc.next();
			System.out.println("Enter Street Address: ");
			street = sc.next();
			System.out.println("Enter City: ");
			city = sc.next();
			System.out.println("Enter State: ");
			state = sc.next();
			System.out.println("Enter Zipcode: ");
			zip = sc.nextInt();
			adds.get(update).setLname(lname);
			adds.get(update).setStreet(street);
			adds.get(update).setCity(city);
			adds.get(update).setState(state);
			adds.get(update).setZip(zip);
			System.out.println("Would you like to edit another? 1 for yes, 0 for no.");
			int keepGoing = sc.nextInt();
			if (keepGoing == 1) {
				update();
			} else
				start();
		}

		}

	public void delete() {		
		read();
		System.out.println("Which would you like to delete?");
		int delete = sc.nextInt()-1;
		System.out.println(adds.remove(delete) + " has been removed.");
		System.out.println("Would you like to delete another? 1 for yes, 0 for no.");
		int keepGoing = sc.nextInt();
		if (keepGoing == 1) {
			delete();
		} else
			start();
	}
	public void search() {
		System.out.println("Please enter the Last Name: ");
		String search = sc.next();
		for(int j = 0; j<adds.size(); j++) {
			if (search.contentEquals(adds.get(j).getLname())) {
				System.out.println("We found it!" + adds.get(j));
			}
		}
		System.out.println("Would you like to search for another? 1 for yes, 0 for no.");
		int keepGoing = sc.nextInt();
		if (keepGoing == 1) {
			search();
		} else
			start();
	}

	public void sort() {
		System.out.println("Sort by Last name: ");
		Collections.sort(adds, (b1, b2) -> b1.getLname().compareTo(b2.getLname()));
		
		for(Address adr:adds) {
			System.out.println(adr);
		}
	}
}
